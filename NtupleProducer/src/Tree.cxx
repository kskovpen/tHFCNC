#include "include/Tree.h"
#include "include/NtupleProducer.h"

Tree::Tree(TChain *ch,std::string fname,std::string treename)
{
   ch = new TChain(treename.c_str());
   
   std::ifstream infile;
   infile.open(fname.c_str());
   std::string ifile = "";
   while( getline(infile, ifile) )     
     {
	std::string fnameStr = std::string(ifile);
	
	ch->Add(fnameStr.c_str());
	
	std::cout << "file: " << fnameStr << std::endl;
     }   
   infile.close();
   Init(ch);
}

Tree::~Tree()
{
   if (!fChain) return;
   delete fChain->GetCurrentFile();
}

Int_t Tree::GetEntry(Long64_t entry)
{
   if (!fChain) return 0;
   return fChain->GetEntry(entry);
}

void Tree::registerInputBranches(TChain *ch)
{
   ch->SetBranchStatus("*",1);
   
   std::cout << "Successfully initialized input branches" << std::endl;
}

void Tree::Init(TChain *ch)
{
   // The Init() function is called when the selector needs to initialize
   // a new tree or chain. Typically here the branch addresses and branch
   // pointers of the tree will be set.
   // It is normally not necessary to make changes to the generated
   // code, but the routine can be extended by the user if needed.
   // Init() will be called many times when running on PROOF
   // (once per file to be processed).

   // Set object pointer
   mc_pdfweights = 0;
   mc_pdfweightIds = 0;
   mc_pu_Nzpositions = 0;
   mc_pu_BunchCrossing = 0;
   mc_pu_zpositions = 0;
   mc_pu_sumpT_lowpT = 0;
   mc_pu_sumpT_highpT = 0;
   mc_pu_ntrks_lowpT = 0;
   mc_pu_ntrks_highpT = 0;
   trigger = 0;
   trigger_name = 0;
   trigger_pass = 0;
   trigger_prescale = 0;
   trigger_HLTprescale = 0;
   trigger_L1prescale = 0;
   triggerobject_pt = 0;
   triggerobject_eta = 0;
   triggerobject_phi = 0;
   triggerobject_collection = 0;
   triggerobject_filterIds_n = 0;
   triggerobject_filterIds = 0;
   triggerobject_isTriggerL1Mu = 0;
   triggerobject_isTriggerL1NoIsoEG = 0;
   triggerobject_isTriggerL1IsoEG = 0;
   triggerobject_isTriggerL1CenJet = 0;
   triggerobject_isTriggerL1ForJet = 0;
   triggerobject_isTriggerL1TauJet = 0;
   triggerobject_isTriggerL1ETM = 0;
   triggerobject_isTriggerL1ETT = 0;
   triggerobject_isTriggerL1HTT = 0;
   triggerobject_isTriggerL1HTM = 0;
   triggerobject_isTriggerL1JetCounts = 0;
   triggerobject_isTriggerL1HfBitCounts = 0;
   triggerobject_isTriggerL1HfRingEtSums = 0;
   triggerobject_isTriggerL1TechTrig = 0;
   triggerobject_isTriggerL1Castor = 0;
   triggerobject_isTriggerL1BPTX = 0;
   triggerobject_isTriggerL1GtExternal = 0;
   triggerobject_isHLT_TriggerPhoton = 0;
   triggerobject_isHLT_TriggerElectron = 0;
   triggerobject_isHLT_TriggerMuon = 0;
   triggerobject_isHLT_TriggerTau = 0;
   triggerobject_isHLT_TriggerJet = 0;
   triggerobject_isHLT_TriggerBJet = 0;
   triggerobject_isHLT_TriggerMET = 0;
   triggerobject_isHLT_TriggerTET = 0;
   triggerobject_isHLT_TriggerTHT = 0;
   triggerobject_isHLT_TriggerMHT = 0;
   triggerobject_isHLT_TriggerTrack = 0;
   triggerobject_isHLT_TriggerCluster = 0;
   triggerobject_isHLT_TriggerMETSig = 0;
   triggerobject_isHLT_TriggerELongit = 0;
   triggerobject_isHLT_TriggerMHTSig = 0;
   triggerobject_isHLT_TriggerHLongit = 0;
   triggerobject_filterLabels_n = 0;
   triggerobject_filterLabels = 0;
   triggerobject_pathNamesAll_n = 0;
   triggerobject_pathNamesAll = 0;
   triggerobject_pathNamesAll_isBoth = 0;
   triggerobject_pathNamesAll_isL3 = 0;
   triggerobject_pathNamesAll_isLF = 0;
   triggerobject_pathNamesAll_isNone = 0;
   el_pt = 0;
   el_eta = 0;
   el_phi = 0;
   el_m = 0;
   el_E = 0;
   el_id = 0;
   el_charge = 0;
   el_passConversionVeto = 0;
   el_isGsfCtfScPixChargeConsistent = 0;
   el_isGsfScPixChargeConsistent = 0;
   el_ecalEnergy = 0;
   el_correctedEcalEnergy = 0;
   el_trackMomentumError = 0;
   el_ip3d = 0;
   el_ip3dErr = 0;
   el_ip2d = 0;
   el_ip2dErr = 0;
   el_neutralHadronIso = 0;
   el_chargedHadronIso = 0;
   el_puChargedHadronIso = 0;
   el_ecalIso = 0;
   el_hcalIso = 0;
   el_particleIso = 0;
   el_photonIso = 0;
   el_trackIso = 0;
   el_ecalPFClusterIso = 0;
   el_hcalPFClusterIso = 0;
   el_pfIso_sumChargedHadronPt = 0;
   el_pfIso_sumNeutralHadronEt = 0;
   el_pfIso_sumPhotonEt = 0;
   el_pfIso_sumPUPt = 0;
   el_vx = 0;
   el_vy = 0;
   el_vz = 0;
   el_hasGsfTrack = 0;
   el_gsfTrack_d0 = 0;
   el_gsfTrack_z0 = 0;
   el_gsfTrack_d0Error = 0;
   el_gsfTrack_z0Error = 0;
   el_gsfTrack_PV_dxy = 0;
   el_gsfTrack_PV_dz = 0;
   el_gsfTrack_dxyError = 0;
   el_gsfTrack_dzError = 0;
   el_gsfTrack_normalizedChi2 = 0;
   el_superCluster_eta = 0;
   el_superCluster_phi = 0;
   el_superCluster_energy = 0;
   el_superCluster_etaWidth = 0;
   el_superCluster_phiWidth = 0;
   el_e5x5 = 0;
   el_sigmaEtaEta = 0;
   el_sigmaIetaIeta = 0;
   el_sigmaIphiIphi = 0;
   el_sigmaIetaIphi = 0;
   el_full5x5_sigmaIphiIphi = 0;
   el_full5x5_sigmaEtaEta = 0;
   el_full5x5_sigmaIetaIeta = 0;
   el_full5x5_sigmaIetaIphi = 0;
   el_full5x5_r9 = 0;
   el_full5x5_e1x5 = 0;
   el_full5x5_e5x5 = 0;
   el_full5x5_e2x5Max = 0;
   el_expectedMissingOuterHits = 0;
   el_numberOfValidPixelHits = 0;
   el_numberOfLostPixelHits = 0;
   el_trackerLayersWithMeasurement = 0;
   el_pixelLayersWithMeasurement = 0;
   el_trackerLayersWithoutMeasurement = 0;
   el_numberOfHits = 0;
   el_numberOfValidHits = 0;
   el_hadronicOverEm = 0;
   el_numberOfLostHits = 0;
   el_numberOfLostHitsDefault = 0;
   el_fbrem = 0;
   el_kf_normalizedChi2 = 0;
   el_gsf_normalizedChi2 = 0;
   el_deltaEtaSuperClusterTrackAtVtx = 0;
   el_deltaPhiSuperClusterTrackAtVtx = 0;
   el_deltaEtaSeedClusterTrackAtCalo = 0;
   el_deltaPhiSeedClusterTrackAtCalo = 0;
   el_eSuperClusterOverP = 0;
   el_IoEmIoP = 0;
   el_ooEmooP = 0;
   el_eleEoPout = 0;
   el_mvaNonTrigV0 = 0;
   el_mvaNonTrigCat = 0;
   el_vetoCBId = 0;
   el_looseCBId = 0;
   el_mediumCBId = 0;
   el_tightCBId = 0;
   el_heepCBId = 0;
   el_mediumMVAId = 0;
   el_tightMVAId = 0;
   el_hasMCMatch = 0;
   el_gen_pt = 0;
   el_gen_eta = 0;
   el_gen_phi = 0;
   el_gen_m = 0;
   el_gen_status = 0;
   el_gen_id = 0;
   el_gen_charge = 0;
   el_gen_dr = 0;
   el_hasMCMatchPAT = 0;
   el_genPAT_pt = 0;
   el_genPAT_eta = 0;
   el_genPAT_phi = 0;
   el_genPAT_m = 0;
   el_genPAT_status = 0;
   el_genPAT_id = 0;
   el_genPAT_charge = 0;
   el_hasMatchedConversion = 0;
   el_expectedMissingInnerHits = 0;
   mu_pt = 0;
   mu_eta = 0;
   mu_phi = 0;
   mu_m = 0;
   mu_E = 0;
   mu_id = 0;
   mu_charge = 0;
   mu_ip3d = 0;
   mu_ip3dErr = 0;
   mu_ip2d = 0;
   mu_ip2dErr = 0;
   mu_ip3dBS = 0;
   mu_ip3dBSErr = 0;
   mu_neutralHadronIso = 0;
   mu_chargedHadronIso = 0;
   mu_puChargedHadronIso = 0;
   mu_ecalIso = 0;
   mu_hcalIso = 0;
   mu_photonIso = 0;
   mu_trackIso = 0;
   mu_pfIso03_sumChargedHadronPt = 0;
   mu_pfIso03_sumChargedParticlePt = 0;
   mu_pfIso03_sumNeutralHadronEt = 0;
   mu_pfIso03_sumNeutralHadronEtHighThreshold = 0;
   mu_pfIso03_sumPhotonEt = 0;
   mu_pfIso03_sumPhotonEtHighThreshold = 0;
   mu_pfIso03_sumPUPt = 0;
   mu_pfIso04_sumChargedHadronPt = 0;
   mu_pfIso04_sumChargedParticlePt = 0;
   mu_pfIso04_sumNeutralHadronEt = 0;
   mu_pfIso04_sumNeutralHadronEtHighThreshold = 0;
   mu_pfIso04_sumPhotonEt = 0;
   mu_pfIso04_sumPhotonEtHighThreshold = 0;
   mu_pfIso04_sumPUPt = 0;
   mu_isGlobalMuon = 0;
   mu_isTrackerMuon = 0;
   mu_isStandAloneMuon = 0;
   mu_isCaloMuon = 0;
   mu_isPFMuon = 0;
   mu_isRPCMuon = 0;
   mu_vx = 0;
   mu_vy = 0;
   mu_vz = 0;
   mu_numberOfMatches = 0;
   mu_numberOfMatchedStations = 0;
   mu_segmentCompatibility = 0;
   mu_caloCompatibility = 0;
   mu_combinedQuality_chi2LocalPosition = 0;
   mu_combinedQuality_trkKink = 0;
   mu_isLooseMuon = 0;
   mu_isMediumMuon = 0;
   mu_isTightMuon = 0;
   mu_isSoftMuon = 0;
   mu_isHighPtMuon = 0;
   mu_hasGlobalTrack = 0;
   mu_globalTrack_d0 = 0;
   mu_globalTrack_z0 = 0;
   mu_globalTrack_d0Error = 0;
   mu_globalTrack_z0Error = 0;
   mu_globalTrack_PV_dxy = 0;
   mu_globalTrack_PV_dz = 0;
   mu_globalTrack_RP_dxy = 0;
   mu_globalTrack_RP_dz = 0;
   mu_globalTrack_dxyError = 0;
   mu_globalTrack_dzError = 0;
   mu_globalTrack_normalizedChi2 = 0;
   mu_globalTrack_numberOfValidHits = 0;
   mu_globalTrack_numberOfValidMuonHits = 0;
   mu_globalTrack_numberOfLostHits = 0;
   mu_globalTrack_pt = 0;
   mu_globalTrack_eta = 0;
   mu_globalTrack_phi = 0;
   mu_globalTrack_ptError = 0;
   mu_globalTrack_etaError = 0;
   mu_globalTrack_phiError = 0;
   mu_globalTrack_vx = 0;
   mu_globalTrack_vy = 0;
   mu_globalTrack_vz = 0;
   mu_globalTrack_qoverp = 0;
   mu_globalTrack_qoverpError = 0;
   mu_globalTrack_charge = 0;
   mu_bestTrackType = 0;
   mu_hasBestTrack = 0;
   mu_bestTrack_d0 = 0;
   mu_bestTrack_z0 = 0;
   mu_bestTrack_d0Error = 0;
   mu_bestTrack_z0Error = 0;
   mu_bestTrack_PV_dxy = 0;
   mu_bestTrack_PV_dz = 0;
   mu_bestTrack_dxyError = 0;
   mu_bestTrack_dzError = 0;
   mu_bestTrack_normalizedChi2 = 0;
   mu_bestTrack_numberOfValidHits = 0;
   mu_bestTrack_numberOfLostHits = 0;
   mu_bestTrack_pt = 0;
   mu_bestTrack_eta = 0;
   mu_bestTrack_phi = 0;
   mu_bestTrack_ptError = 0;
   mu_bestTrack_etaError = 0;
   mu_bestTrack_phiError = 0;
   mu_bestTrack_vx = 0;
   mu_bestTrack_vy = 0;
   mu_bestTrack_vz = 0;
   mu_bestTrack_qoverp = 0;
   mu_bestTrack_qoverpError = 0;
   mu_bestTrack_charge = 0;
   mu_hasInnerTrack = 0;
   mu_innerTrack_d0 = 0;
   mu_innerTrack_z0 = 0;
   mu_innerTrack_d0Error = 0;
   mu_innerTrack_z0Error = 0;
   mu_innerTrack_PV_dxy = 0;
   mu_innerTrack_PV_dz = 0;
   mu_innerTrack_dxyError = 0;
   mu_innerTrack_dzError = 0;
   mu_innerTrack_normalizedChi2 = 0;
   mu_innerTrack_numberOfValidHits = 0;
   mu_innerTrack_numberOfLostHits = 0;
   mu_innerTrack_pt = 0;
   mu_innerTrack_eta = 0;
   mu_innerTrack_phi = 0;
   mu_innerTrack_ptError = 0;
   mu_innerTrack_etaError = 0;
   mu_innerTrack_phiError = 0;
   mu_innerTrack_vx = 0;
   mu_innerTrack_vy = 0;
   mu_innerTrack_vz = 0;
   mu_innerTrack_qoverp = 0;
   mu_innerTrack_qoverpError = 0;
   mu_innerTrack_charge = 0;
   mu_innerTrack_trackerLayersWithMeasurement = 0;
   mu_innerTrack_numberOfValidPixelHits = 0;
   mu_innerTrack_numberOfLostPixelHits = 0;
   mu_innerTrack_validFraction = 0;
   mu_type = 0;
   mu_hasMCMatch = 0;
   mu_gen_pt = 0;
   mu_gen_eta = 0;
   mu_gen_phi = 0;
   mu_gen_m = 0;
   mu_gen_status = 0;
   mu_gen_id = 0;
   mu_gen_charge = 0;
   mu_gen_dr = 0;
   mu_hasMCMatchPAT = 0;
   mu_genPAT_pt = 0;
   mu_genPAT_eta = 0;
   mu_genPAT_phi = 0;
   mu_genPAT_m = 0;
   mu_genPAT_status = 0;
   mu_genPAT_id = 0;
   mu_genPAT_charge = 0;
   tau_pt = 0;
   tau_eta = 0;
   tau_phi = 0;
   tau_m = 0;
   tau_E = 0;
   tau_id = 0;
   tau_charge = 0;
   tau_hasLeadChargedHadrCand = 0;
   tau_leadingTrackPt = 0;
   tau_leadingTrackCharge = 0;
   tau_leadingTrackDz = 0;
   tau_leadingTrackDxy = 0;
   tau_decayMode = 0;
   tau_decayModeFindingOldDMs = 0;
   tau_decayModeFindingNewDMs = 0;
   tau_puCorrPtSum = 0;
   tau_neutralIsoPtSum = 0;
   tau_chargedIsoPtSum = 0;
   tau_byCombinedIsolationDeltaBetaCorrRaw3Hits = 0;
   tau_byLooseCombinedIsolationDeltaBetaCorr3Hits = 0;
   tau_byMediumCombinedIsolationDeltaBetaCorr3Hits = 0;
   tau_byTightCombinedIsolationDeltaBetaCorr3Hits = 0;
   tau_byLooseIsolationMVArun2v1DBdR03oldDMwLT = 0;
   tau_byMediumIsolationMVArun2v1DBdR03oldDMwLT = 0;
   tau_byTightIsolationMVArun2v1DBdR03oldDMwLT = 0;
   tau_byVTightIsolationMVArun2v1DBdR03oldDMwLT = 0;
   tau_againstMuonLoose3 = 0;
   tau_againstMuonTight3 = 0;
   tau_pfEssential_jet_pt = 0;
   tau_pfEssential_jet_eta = 0;
   tau_pfEssential_jet_phi = 0;
   tau_pfEssential_jet_m = 0;
   tau_pfEssential_jetCorr_pt = 0;
   tau_pfEssential_jetCorr_eta = 0;
   tau_pfEssential_jetCorr_phi = 0;
   tau_pfEssential_jetCorr_m = 0;
   tau_pfEssential_hasSV = 0;
   tau_pfEssential_sv_x = 0;
   tau_pfEssential_sv_y = 0;
   tau_pfEssential_sv_z = 0;
   tau_pfEssential_flightLengthSig = 0;
   tau_pfEssential_dxy = 0;
   tau_pfEssential_dxy_error = 0;
   tau_pfEssential_dxy_Sig = 0;
   jet_pt = 0;
   jet_eta = 0;
   jet_phi = 0;
   jet_m = 0;
   jet_E = 0;
   jet_ntrk = 0;
   jet_JBP = 0;
   jet_JP = 0;
   jet_TCHP = 0;
   jet_TCHE = 0;
   jet_SSVHE = 0;
   jet_SSVHP = 0;
   jet_CMVA = 0;
   jet_CSVv2 = 0;
   jet_cMVAv2 = 0;
   jet_charge = 0;
   jet_chargeVec = 0;
   jet_CharmCvsL = 0;
   jet_CharmCvsB = 0;
   jet_partonFlavour = 0;
   jet_hadronFlavour = 0;
   jet_neutralHadronEnergy = 0;
   jet_neutralEmEnergy = 0;
   jet_chargedHadronEnergy = 0;
   jet_chargedEmEnergy = 0;
   jet_electronEnergy = 0;
   jet_muonEnergy = 0;
   jet_photonEnergy = 0;
   jet_chargedMultiplicity = 0;
   jet_neutralMultiplicity = 0;
   jet_jetArea = 0;
   jet_jecFactorUncorrected = 0;
   jet_jecFactorL1FastJet = 0;
   jet_jecFactorL2Relative = 0;
   jet_jecFactorL3Absolute = 0;
   jet_neutralHadronEnergyFraction = 0;
   jet_neutralEmEnergyFraction = 0;
   jet_chargedHadronEnergyFraction = 0;
   jet_muonEnergyFraction = 0;
   jet_chargedEmEnergyFraction = 0;
   jet_Unc = 0;
   jet_pileupJetId = 0;
   jet_looseJetID = 0;
   jet_tightJetID = 0;
   jet_hasGenJet = 0;
   jet_genJet_pt = 0;
   jet_genJet_eta = 0;
   jet_genJet_phi = 0;
   jet_genJet_m = 0;
   jet_genJet_E = 0;
   jet_genJet_status = 0;
   jet_genJet_id = 0;
   jet_hasGenParton = 0;
   jet_genParton_pt = 0;
   jet_genParton_eta = 0;
   jet_genParton_phi = 0;
   jet_genParton_m = 0;
   jet_genParton_E = 0;
   jet_genParton_status = 0;
   jet_genParton_id = 0;
   genJet_pt = 0;
   genJet_eta = 0;
   genJet_phi = 0;
   genJet_m = 0;
   genJet_E = 0;
   genJet_emEnergy = 0;
   genJet_hadEnergy = 0;
   genJet_invisibleEnergy = 0;
   genJet_auxiliaryEnergy = 0;
   genJet_flavour = 0;
   gen_pt = 0;
   gen_eta = 0;
   gen_phi = 0;
   gen_m = 0;
   gen_E = 0;
   gen_status = 0;
   gen_id = 0;
   gen_charge = 0;
   gen_index = 0;
   gen_mother_index = 0;
   gen_daughter_n = 0;
   gen_daughter_index = 0;
   genTTX_id = 0;

   // Set branch addresses and branch pointers
   if (!ch) return;
   fChain = ch;
   fCurrent = -1;
//   fChain->SetMakeClass(1);

   fChain->SetBranchAddress("ev_run", &ev_run, &b_ev_run);
   fChain->SetBranchAddress("ev_id", &ev_id, &b_ev_id);
   fChain->SetBranchAddress("ev_lumi", &ev_lumi, &b_ev_lumi);
   fChain->SetBranchAddress("ev_rho", &ev_rho, &b_ev_rho);
   fChain->SetBranchAddress("met_px", &met_px, &b_met_px);
   fChain->SetBranchAddress("met_py", &met_py, &b_met_py);
   fChain->SetBranchAddress("met_pt", &met_pt, &b_met_pt);
   fChain->SetBranchAddress("met_phi", &met_phi, &b_met_phi);
   fChain->SetBranchAddress("met_sumet", &met_sumet, &b_met_sumet);
   fChain->SetBranchAddress("met_sig", &met_sig, &b_met_sig);
   fChain->SetBranchAddress("met_cov00", &met_cov00, &b_met_cov00);
   fChain->SetBranchAddress("met_cov10", &met_cov10, &b_met_cov10);
   fChain->SetBranchAddress("met_cov01", &met_cov01, &b_met_cov01);
   fChain->SetBranchAddress("met_cov11", &met_cov11, &b_met_cov11);
   fChain->SetBranchAddress("metGen_px", &metGen_px, &b_metGen_px);
   fChain->SetBranchAddress("metGen_py", &metGen_py, &b_metGen_py);
   fChain->SetBranchAddress("metGen_pt", &metGen_pt, &b_metGen_pt);
   fChain->SetBranchAddress("metGen_phi", &metGen_phi, &b_metGen_phi);
   fChain->SetBranchAddress("metGen_sumet", &metGen_sumet, &b_metGen_sumet);
   fChain->SetBranchAddress("metGen_MuonEt", &metGen_MuonEt, &b_metGen_MuonEt);
   fChain->SetBranchAddress("met_shiftedPx_JetEnUp", &met_shiftedPx_JetEnUp, &b_met_shiftedPx_JetEnUp);
   fChain->SetBranchAddress("met_shiftedPx_JetEnDown", &met_shiftedPx_JetEnDown, &b_met_shiftedPx_JetEnDown);
   fChain->SetBranchAddress("met_shiftedPx_JetResUp", &met_shiftedPx_JetResUp, &b_met_shiftedPx_JetResUp);
   fChain->SetBranchAddress("met_shiftedPx_JetResDown", &met_shiftedPx_JetResDown, &b_met_shiftedPx_JetResDown);
   fChain->SetBranchAddress("met_shiftedPx_MuonEnUp", &met_shiftedPx_MuonEnUp, &b_met_shiftedPx_MuonEnUp);
   fChain->SetBranchAddress("met_shiftedPx_MuonEnDown", &met_shiftedPx_MuonEnDown, &b_met_shiftedPx_MuonEnDown);
   fChain->SetBranchAddress("met_shiftedPx_ElectronEnUp", &met_shiftedPx_ElectronEnUp, &b_met_shiftedPx_ElectronEnUp);
   fChain->SetBranchAddress("met_shiftedPx_ElectronEnDown", &met_shiftedPx_ElectronEnDown, &b_met_shiftedPx_ElectronEnDown);
   fChain->SetBranchAddress("met_shiftedPx_TauEnUp", &met_shiftedPx_TauEnUp, &b_met_shiftedPx_TauEnUp);
   fChain->SetBranchAddress("met_shiftedPx_TauEnDown", &met_shiftedPx_TauEnDown, &b_met_shiftedPx_TauEnDown);
   fChain->SetBranchAddress("met_shiftedPx_UnclusteredEnUp", &met_shiftedPx_UnclusteredEnUp, &b_met_shiftedPx_UnclusteredEnUp);
   fChain->SetBranchAddress("met_shiftedPx_UnclusteredEnDown", &met_shiftedPx_UnclusteredEnDown, &b_met_shiftedPx_UnclusteredEnDown);
   fChain->SetBranchAddress("met_shiftedPx_NoShift", &met_shiftedPx_NoShift, &b_met_shiftedPx_NoShift);
   fChain->SetBranchAddress("met_shiftedPx_PhotonEnUp", &met_shiftedPx_PhotonEnUp, &b_met_shiftedPx_PhotonEnUp);
   fChain->SetBranchAddress("met_shiftedPx_PhotonEnDown", &met_shiftedPx_PhotonEnDown, &b_met_shiftedPx_PhotonEnDown);
   fChain->SetBranchAddress("met_shiftedPy_JetEnUp", &met_shiftedPy_JetEnUp, &b_met_shiftedPy_JetEnUp);
   fChain->SetBranchAddress("met_shiftedPy_JetEnDown", &met_shiftedPy_JetEnDown, &b_met_shiftedPy_JetEnDown);
   fChain->SetBranchAddress("met_shiftedPy_JetResUp", &met_shiftedPy_JetResUp, &b_met_shiftedPy_JetResUp);
   fChain->SetBranchAddress("met_shiftedPy_JetResDown", &met_shiftedPy_JetResDown, &b_met_shiftedPy_JetResDown);
   fChain->SetBranchAddress("met_shiftedPy_MuonEnUp", &met_shiftedPy_MuonEnUp, &b_met_shiftedPy_MuonEnUp);
   fChain->SetBranchAddress("met_shiftedPy_MuonEnDown", &met_shiftedPy_MuonEnDown, &b_met_shiftedPy_MuonEnDown);
   fChain->SetBranchAddress("met_shiftedPy_ElectronEnUp", &met_shiftedPy_ElectronEnUp, &b_met_shiftedPy_ElectronEnUp);
   fChain->SetBranchAddress("met_shiftedPy_ElectronEnDown", &met_shiftedPy_ElectronEnDown, &b_met_shiftedPy_ElectronEnDown);
   fChain->SetBranchAddress("met_shiftedPy_TauEnUp", &met_shiftedPy_TauEnUp, &b_met_shiftedPy_TauEnUp);
   fChain->SetBranchAddress("met_shiftedPy_TauEnDown", &met_shiftedPy_TauEnDown, &b_met_shiftedPy_TauEnDown);
   fChain->SetBranchAddress("met_shiftedPy_UnclusteredEnUp", &met_shiftedPy_UnclusteredEnUp, &b_met_shiftedPy_UnclusteredEnUp);
   fChain->SetBranchAddress("met_shiftedPy_UnclusteredEnDown", &met_shiftedPy_UnclusteredEnDown, &b_met_shiftedPy_UnclusteredEnDown);
   fChain->SetBranchAddress("met_shiftedPy_NoShift", &met_shiftedPy_NoShift, &b_met_shiftedPy_NoShift);
   fChain->SetBranchAddress("met_shiftedPy_PhotonEnUp", &met_shiftedPy_PhotonEnUp, &b_met_shiftedPy_PhotonEnUp);
   fChain->SetBranchAddress("met_shiftedPy_PhotonEnDown", &met_shiftedPy_PhotonEnDown, &b_met_shiftedPy_PhotonEnDown);
   fChain->SetBranchAddress("met_shiftedPhi_JetEnUp", &met_shiftedPhi_JetEnUp, &b_met_shiftedPhi_JetEnUp);
   fChain->SetBranchAddress("met_shiftedPhi_JetEnDown", &met_shiftedPhi_JetEnDown, &b_met_shiftedPhi_JetEnDown);
   fChain->SetBranchAddress("met_shiftedPhi_JetResUp", &met_shiftedPhi_JetResUp, &b_met_shiftedPhi_JetResUp);
   fChain->SetBranchAddress("met_shiftedPhi_JetResDown", &met_shiftedPhi_JetResDown, &b_met_shiftedPhi_JetResDown);
   fChain->SetBranchAddress("met_shiftedPhi_MuonEnUp", &met_shiftedPhi_MuonEnUp, &b_met_shiftedPhi_MuonEnUp);
   fChain->SetBranchAddress("met_shiftedPhi_MuonEnDown", &met_shiftedPhi_MuonEnDown, &b_met_shiftedPhi_MuonEnDown);
   fChain->SetBranchAddress("met_shiftedPhi_ElectronEnUp", &met_shiftedPhi_ElectronEnUp, &b_met_shiftedPhi_ElectronEnUp);
   fChain->SetBranchAddress("met_shiftedPhi_ElectronEnDown", &met_shiftedPhi_ElectronEnDown, &b_met_shiftedPhi_ElectronEnDown);
   fChain->SetBranchAddress("met_shiftedPhi_TauEnUp", &met_shiftedPhi_TauEnUp, &b_met_shiftedPhi_TauEnUp);
   fChain->SetBranchAddress("met_shiftedPhi_TauEnDown", &met_shiftedPhi_TauEnDown, &b_met_shiftedPhi_TauEnDown);
   fChain->SetBranchAddress("met_shiftedPhi_UnclusteredEnUp", &met_shiftedPhi_UnclusteredEnUp, &b_met_shiftedPhi_UnclusteredEnUp);
   fChain->SetBranchAddress("met_shiftedPhi_UnclusteredEnDown", &met_shiftedPhi_UnclusteredEnDown, &b_met_shiftedPhi_UnclusteredEnDown);
   fChain->SetBranchAddress("met_shiftedPhi_NoShift", &met_shiftedPhi_NoShift, &b_met_shiftedPhi_NoShift);
   fChain->SetBranchAddress("met_shiftedPhi_PhotonEnUp", &met_shiftedPhi_PhotonEnUp, &b_met_shiftedPhi_PhotonEnUp);
   fChain->SetBranchAddress("met_shiftedPhi_PhotonEnDown", &met_shiftedPhi_PhotonEnDown, &b_met_shiftedPhi_PhotonEnDown);
   fChain->SetBranchAddress("met_shiftedSumEt_JetEnUp", &met_shiftedSumEt_JetEnUp, &b_met_shiftedSumEt_JetEnUp);
   fChain->SetBranchAddress("met_shiftedSumEt_JetEnDown", &met_shiftedSumEt_JetEnDown, &b_met_shiftedSumEt_JetEnDown);
   fChain->SetBranchAddress("met_shiftedSumEt_JetResUp", &met_shiftedSumEt_JetResUp, &b_met_shiftedSumEt_JetResUp);
   fChain->SetBranchAddress("met_shiftedSumEt_JetResDown", &met_shiftedSumEt_JetResDown, &b_met_shiftedSumEt_JetResDown);
   fChain->SetBranchAddress("met_shiftedSumEt_MuonEnUp", &met_shiftedSumEt_MuonEnUp, &b_met_shiftedSumEt_MuonEnUp);
   fChain->SetBranchAddress("met_shiftedSumEt_MuonEnDown", &met_shiftedSumEt_MuonEnDown, &b_met_shiftedSumEt_MuonEnDown);
   fChain->SetBranchAddress("met_shiftedSumEt_ElectronEnUp", &met_shiftedSumEt_ElectronEnUp, &b_met_shiftedSumEt_ElectronEnUp);
   fChain->SetBranchAddress("met_shiftedSumEt_ElectronEnDown", &met_shiftedSumEt_ElectronEnDown, &b_met_shiftedSumEt_ElectronEnDown);
   fChain->SetBranchAddress("met_shiftedSumEt_TauEnUp", &met_shiftedSumEt_TauEnUp, &b_met_shiftedSumEt_TauEnUp);
   fChain->SetBranchAddress("met_shiftedSumEt_TauEnDown", &met_shiftedSumEt_TauEnDown, &b_met_shiftedSumEt_TauEnDown);
   fChain->SetBranchAddress("met_shiftedSumEt_UnclusteredEnUp", &met_shiftedSumEt_UnclusteredEnUp, &b_met_shiftedSumEt_UnclusteredEnUp);
   fChain->SetBranchAddress("met_shiftedSumEt_UnclusteredEnDown", &met_shiftedSumEt_UnclusteredEnDown, &b_met_shiftedSumEt_UnclusteredEnDown);
   fChain->SetBranchAddress("met_shiftedSumEt_NoShift", &met_shiftedSumEt_NoShift, &b_met_shiftedSumEt_NoShift);
   fChain->SetBranchAddress("met_shiftedSumEt_PhotonEnUp", &met_shiftedSumEt_PhotonEnUp, &b_met_shiftedSumEt_PhotonEnUp);
   fChain->SetBranchAddress("met_shiftedSumEt_PhotonEnDown", &met_shiftedSumEt_PhotonEnDown, &b_met_shiftedSumEt_PhotonEnDown);
   fChain->SetBranchAddress("metNoHF_pt", &metNoHF_pt, &b_metNoHF_pt);
   fChain->SetBranchAddress("metNoHF_phi", &metNoHF_phi, &b_metNoHF_phi);
   fChain->SetBranchAddress("metNoHF_sumet", &metNoHF_sumet, &b_metNoHF_sumet);
   fChain->SetBranchAddress("pv_x", &pv_x, &b_pv_x);
   fChain->SetBranchAddress("pv_y", &pv_y, &b_pv_y);
   fChain->SetBranchAddress("pv_z", &pv_z, &b_pv_z);
   fChain->SetBranchAddress("pv_xError", &pv_xError, &b_pv_xError);
   fChain->SetBranchAddress("pv_yError", &pv_yError, &b_pv_yError);
   fChain->SetBranchAddress("pv_zError", &pv_zError, &b_pv_zError);
   fChain->SetBranchAddress("pv_chi2", &pv_chi2, &b_pv_chi2);
   fChain->SetBranchAddress("pv_ndof", &pv_ndof, &b_pv_ndof);
   fChain->SetBranchAddress("pv_rho", &pv_rho, &b_pv_rho);
   fChain->SetBranchAddress("pv_isFake", &pv_isFake, &b_pv_isFake);
   fChain->SetBranchAddress("mc_weight", &mc_weight, &b_mc_weight);
   fChain->SetBranchAddress("mc_id", &mc_id, &b_mc_id);
   fChain->SetBranchAddress("mc_f1", &mc_f1, &b_mc_f1);
   fChain->SetBranchAddress("mc_f2", &mc_f2, &b_mc_f2);
   fChain->SetBranchAddress("mc_x1", &mc_x1, &b_mc_x1);
   fChain->SetBranchAddress("mc_x2", &mc_x2, &b_mc_x2);
   fChain->SetBranchAddress("mc_scale", &mc_scale, &b_mc_scale);
   fChain->SetBranchAddress("mc_ptHat", &mc_ptHat, &b_mc_ptHat);
   fChain->SetBranchAddress("weight_originalXWGTUP", &weight_originalXWGTUP, &b_weight_originalXWGTUP);
   fChain->SetBranchAddress("weight_scale_muF0p5", &weight_scale_muF0p5, &b_weight_scale_muF0p5);
   fChain->SetBranchAddress("weight_scale_muF2", &weight_scale_muF2, &b_weight_scale_muF2);
   fChain->SetBranchAddress("weight_scale_muR0p5", &weight_scale_muR0p5, &b_weight_scale_muR0p5);
   fChain->SetBranchAddress("weight_scale_muR2", &weight_scale_muR2, &b_weight_scale_muR2);
   fChain->SetBranchAddress("mc_pdfweights", &mc_pdfweights, &b_mc_pdfweights);
   fChain->SetBranchAddress("mc_pdfweightIds", &mc_pdfweightIds, &b_mc_pdfweightIds);
   fChain->SetBranchAddress("mc_pu_intime_NumInt", &mc_pu_intime_NumInt, &b_mc_pu_intime_NumInt);
   fChain->SetBranchAddress("mc_pu_trueNumInt", &mc_pu_trueNumInt, &b_mc_pu_trueNumInt);
   fChain->SetBranchAddress("mc_pu_before_npu", &mc_pu_before_npu, &b_mc_pu_before_npu);
   fChain->SetBranchAddress("mc_pu_after_npu", &mc_pu_after_npu, &b_mc_pu_after_npu);
   fChain->SetBranchAddress("mc_pu_Npvi", &mc_pu_Npvi, &b_mc_pu_Npvi);
   fChain->SetBranchAddress("mc_pu_Nzpositions", &mc_pu_Nzpositions, &b_mc_pu_Nzpositions);
   fChain->SetBranchAddress("mc_pu_BunchCrossing", &mc_pu_BunchCrossing, &b_mc_pu_BunchCrossing);
   fChain->SetBranchAddress("mc_pu_zpositions", &mc_pu_zpositions, &b_mc_pu_zpositions);
   fChain->SetBranchAddress("mc_pu_sumpT_lowpT", &mc_pu_sumpT_lowpT, &b_mc_pu_sumpT_lowpT);
   fChain->SetBranchAddress("mc_pu_sumpT_highpT", &mc_pu_sumpT_highpT, &b_mc_pu_sumpT_highpT);
   fChain->SetBranchAddress("mc_pu_ntrks_lowpT", &mc_pu_ntrks_lowpT, &b_mc_pu_ntrks_lowpT);
   fChain->SetBranchAddress("mc_pu_ntrks_highpT", &mc_pu_ntrks_highpT, &b_mc_pu_ntrks_highpT);
   fChain->SetBranchAddress("trigger_n", &trigger_n, &b_trigger_n);
   fChain->SetBranchAddress("trigger", &trigger, &b_trigger);
   fChain->SetBranchAddress("trigger_name", &trigger_name, &b_trigger_name);
   fChain->SetBranchAddress("trigger_pass", &trigger_pass, &b_trigger_pass);
   fChain->SetBranchAddress("trigger_prescale", &trigger_prescale, &b_trigger_prescale);
   fChain->SetBranchAddress("trigger_HLTprescale", &trigger_HLTprescale, &b_trigger_HLTprescale);
   fChain->SetBranchAddress("trigger_L1prescale", &trigger_L1prescale, &b_trigger_L1prescale);
   fChain->SetBranchAddress("triggerobject_n", &triggerobject_n, &b_triggerobject_n);
   fChain->SetBranchAddress("triggerobject_pt", &triggerobject_pt, &b_triggerobject_pt);
   fChain->SetBranchAddress("triggerobject_eta", &triggerobject_eta, &b_triggerobject_eta);
   fChain->SetBranchAddress("triggerobject_phi", &triggerobject_phi, &b_triggerobject_phi);
   fChain->SetBranchAddress("triggerobject_collection", &triggerobject_collection, &b_triggerobject_collection);
   fChain->SetBranchAddress("triggerobject_filterIds_n", &triggerobject_filterIds_n, &b_triggerobject_filterIds_n);
   fChain->SetBranchAddress("triggerobject_filterIds", &triggerobject_filterIds, &b_triggerobject_filterIds);
   fChain->SetBranchAddress("triggerobject_isTriggerL1Mu", &triggerobject_isTriggerL1Mu, &b_triggerobject_isTriggerL1Mu);
   fChain->SetBranchAddress("triggerobject_isTriggerL1NoIsoEG", &triggerobject_isTriggerL1NoIsoEG, &b_triggerobject_isTriggerL1NoIsoEG);
   fChain->SetBranchAddress("triggerobject_isTriggerL1IsoEG", &triggerobject_isTriggerL1IsoEG, &b_triggerobject_isTriggerL1IsoEG);
   fChain->SetBranchAddress("triggerobject_isTriggerL1CenJet", &triggerobject_isTriggerL1CenJet, &b_triggerobject_isTriggerL1CenJet);
   fChain->SetBranchAddress("triggerobject_isTriggerL1ForJet", &triggerobject_isTriggerL1ForJet, &b_triggerobject_isTriggerL1ForJet);
   fChain->SetBranchAddress("triggerobject_isTriggerL1TauJet", &triggerobject_isTriggerL1TauJet, &b_triggerobject_isTriggerL1TauJet);
   fChain->SetBranchAddress("triggerobject_isTriggerL1ETM", &triggerobject_isTriggerL1ETM, &b_triggerobject_isTriggerL1ETM);
   fChain->SetBranchAddress("triggerobject_isTriggerL1ETT", &triggerobject_isTriggerL1ETT, &b_triggerobject_isTriggerL1ETT);
   fChain->SetBranchAddress("triggerobject_isTriggerL1HTT", &triggerobject_isTriggerL1HTT, &b_triggerobject_isTriggerL1HTT);
   fChain->SetBranchAddress("triggerobject_isTriggerL1HTM", &triggerobject_isTriggerL1HTM, &b_triggerobject_isTriggerL1HTM);
   fChain->SetBranchAddress("triggerobject_isTriggerL1JetCounts", &triggerobject_isTriggerL1JetCounts, &b_triggerobject_isTriggerL1JetCounts);
   fChain->SetBranchAddress("triggerobject_isTriggerL1HfBitCounts", &triggerobject_isTriggerL1HfBitCounts, &b_triggerobject_isTriggerL1HfBitCounts);
   fChain->SetBranchAddress("triggerobject_isTriggerL1HfRingEtSums", &triggerobject_isTriggerL1HfRingEtSums, &b_triggerobject_isTriggerL1HfRingEtSums);
   fChain->SetBranchAddress("triggerobject_isTriggerL1TechTrig", &triggerobject_isTriggerL1TechTrig, &b_triggerobject_isTriggerL1TechTrig);
   fChain->SetBranchAddress("triggerobject_isTriggerL1Castor", &triggerobject_isTriggerL1Castor, &b_triggerobject_isTriggerL1Castor);
   fChain->SetBranchAddress("triggerobject_isTriggerL1BPTX", &triggerobject_isTriggerL1BPTX, &b_triggerobject_isTriggerL1BPTX);
   fChain->SetBranchAddress("triggerobject_isTriggerL1GtExternal", &triggerobject_isTriggerL1GtExternal, &b_triggerobject_isTriggerL1GtExternal);
   fChain->SetBranchAddress("triggerobject_isHLT_TriggerPhoton", &triggerobject_isHLT_TriggerPhoton, &b_triggerobject_isHLT_TriggerPhoton);
   fChain->SetBranchAddress("triggerobject_isHLT_TriggerElectron", &triggerobject_isHLT_TriggerElectron, &b_triggerobject_isHLT_TriggerElectron);
   fChain->SetBranchAddress("triggerobject_isHLT_TriggerMuon", &triggerobject_isHLT_TriggerMuon, &b_triggerobject_isHLT_TriggerMuon);
   fChain->SetBranchAddress("triggerobject_isHLT_TriggerTau", &triggerobject_isHLT_TriggerTau, &b_triggerobject_isHLT_TriggerTau);
   fChain->SetBranchAddress("triggerobject_isHLT_TriggerJet", &triggerobject_isHLT_TriggerJet, &b_triggerobject_isHLT_TriggerJet);
   fChain->SetBranchAddress("triggerobject_isHLT_TriggerBJet", &triggerobject_isHLT_TriggerBJet, &b_triggerobject_isHLT_TriggerBJet);
   fChain->SetBranchAddress("triggerobject_isHLT_TriggerMET", &triggerobject_isHLT_TriggerMET, &b_triggerobject_isHLT_TriggerMET);
   fChain->SetBranchAddress("triggerobject_isHLT_TriggerTET", &triggerobject_isHLT_TriggerTET, &b_triggerobject_isHLT_TriggerTET);
   fChain->SetBranchAddress("triggerobject_isHLT_TriggerTHT", &triggerobject_isHLT_TriggerTHT, &b_triggerobject_isHLT_TriggerTHT);
   fChain->SetBranchAddress("triggerobject_isHLT_TriggerMHT", &triggerobject_isHLT_TriggerMHT, &b_triggerobject_isHLT_TriggerMHT);
   fChain->SetBranchAddress("triggerobject_isHLT_TriggerTrack", &triggerobject_isHLT_TriggerTrack, &b_triggerobject_isHLT_TriggerTrack);
   fChain->SetBranchAddress("triggerobject_isHLT_TriggerCluster", &triggerobject_isHLT_TriggerCluster, &b_triggerobject_isHLT_TriggerCluster);
   fChain->SetBranchAddress("triggerobject_isHLT_TriggerMETSig", &triggerobject_isHLT_TriggerMETSig, &b_triggerobject_isHLT_TriggerMETSig);
   fChain->SetBranchAddress("triggerobject_isHLT_TriggerELongit", &triggerobject_isHLT_TriggerELongit, &b_triggerobject_isHLT_TriggerELongit);
   fChain->SetBranchAddress("triggerobject_isHLT_TriggerMHTSig", &triggerobject_isHLT_TriggerMHTSig, &b_triggerobject_isHLT_TriggerMHTSig);
   fChain->SetBranchAddress("triggerobject_isHLT_TriggerHLongit", &triggerobject_isHLT_TriggerHLongit, &b_triggerobject_isHLT_TriggerHLongit);
   fChain->SetBranchAddress("triggerobject_filterLabels_n", &triggerobject_filterLabels_n, &b_triggerobject_filterLabels_n);
   fChain->SetBranchAddress("triggerobject_filterLabels", &triggerobject_filterLabels, &b_triggerobject_filterLabels);
   fChain->SetBranchAddress("triggerobject_pathNamesAll_n", &triggerobject_pathNamesAll_n, &b_triggerobject_pathNamesAll_n);
   fChain->SetBranchAddress("triggerobject_pathNamesAll", &triggerobject_pathNamesAll, &b_triggerobject_pathNamesAll);
   fChain->SetBranchAddress("triggerobject_pathNamesAll_isBoth", &triggerobject_pathNamesAll_isBoth, &b_triggerobject_pathNamesAll_isBoth);
   fChain->SetBranchAddress("triggerobject_pathNamesAll_isL3", &triggerobject_pathNamesAll_isL3, &b_triggerobject_pathNamesAll_isL3);
   fChain->SetBranchAddress("triggerobject_pathNamesAll_isLF", &triggerobject_pathNamesAll_isLF, &b_triggerobject_pathNamesAll_isLF);
   fChain->SetBranchAddress("triggerobject_pathNamesAll_isNone", &triggerobject_pathNamesAll_isNone, &b_triggerobject_pathNamesAll_isNone);
   fChain->SetBranchAddress("nvertex", &nvertex, &b_nvertex);
   fChain->SetBranchAddress("el_n", &el_n, &b_el_n);
   fChain->SetBranchAddress("el_pt", &el_pt, &b_el_pt);
   fChain->SetBranchAddress("el_eta", &el_eta, &b_el_eta);
   fChain->SetBranchAddress("el_phi", &el_phi, &b_el_phi);
   fChain->SetBranchAddress("el_m", &el_m, &b_el_m);
   fChain->SetBranchAddress("el_E", &el_E, &b_el_E);
   fChain->SetBranchAddress("el_id", &el_id, &b_el_id);
   fChain->SetBranchAddress("el_charge", &el_charge, &b_el_charge);
   fChain->SetBranchAddress("el_passConversionVeto", &el_passConversionVeto, &b_el_passConversionVeto);
   fChain->SetBranchAddress("el_isGsfCtfScPixChargeConsistent", &el_isGsfCtfScPixChargeConsistent, &b_el_isGsfCtfScPixChargeConsistent);
   fChain->SetBranchAddress("el_isGsfScPixChargeConsistent", &el_isGsfScPixChargeConsistent, &b_el_isGsfScPixChargeConsistent);
   fChain->SetBranchAddress("el_ecalEnergy", &el_ecalEnergy, &b_el_ecalEnergy);
   fChain->SetBranchAddress("el_correctedEcalEnergy", &el_correctedEcalEnergy, &b_el_correctedEcalEnergy);
   fChain->SetBranchAddress("el_trackMomentumError", &el_trackMomentumError, &b_el_trackMomentumError);
   fChain->SetBranchAddress("el_ip3d", &el_ip3d, &b_el_ip3d);
   fChain->SetBranchAddress("el_ip3dErr", &el_ip3dErr, &b_el_ip3dErr);
   fChain->SetBranchAddress("el_ip2d", &el_ip2d, &b_el_ip2d);
   fChain->SetBranchAddress("el_ip2dErr", &el_ip2dErr, &b_el_ip2dErr);
   fChain->SetBranchAddress("el_neutralHadronIso", &el_neutralHadronIso, &b_el_neutralHadronIso);
   fChain->SetBranchAddress("el_chargedHadronIso", &el_chargedHadronIso, &b_el_chargedHadronIso);
   fChain->SetBranchAddress("el_puChargedHadronIso", &el_puChargedHadronIso, &b_el_puChargedHadronIso);
   fChain->SetBranchAddress("el_ecalIso", &el_ecalIso, &b_el_ecalIso);
   fChain->SetBranchAddress("el_hcalIso", &el_hcalIso, &b_el_hcalIso);
   fChain->SetBranchAddress("el_particleIso", &el_particleIso, &b_el_particleIso);
   fChain->SetBranchAddress("el_photonIso", &el_photonIso, &b_el_photonIso);
   fChain->SetBranchAddress("el_trackIso", &el_trackIso, &b_el_trackIso);
   fChain->SetBranchAddress("el_ecalPFClusterIso", &el_ecalPFClusterIso, &b_el_ecalPFClusterIso);
   fChain->SetBranchAddress("el_hcalPFClusterIso", &el_hcalPFClusterIso, &b_el_hcalPFClusterIso);
   fChain->SetBranchAddress("el_pfIso_sumChargedHadronPt", &el_pfIso_sumChargedHadronPt, &b_el_pfIso_sumChargedHadronPt);
   fChain->SetBranchAddress("el_pfIso_sumNeutralHadronEt", &el_pfIso_sumNeutralHadronEt, &b_el_pfIso_sumNeutralHadronEt);
   fChain->SetBranchAddress("el_pfIso_sumPhotonEt", &el_pfIso_sumPhotonEt, &b_el_pfIso_sumPhotonEt);
   fChain->SetBranchAddress("el_pfIso_sumPUPt", &el_pfIso_sumPUPt, &b_el_pfIso_sumPUPt);
   fChain->SetBranchAddress("el_vx", &el_vx, &b_el_vx);
   fChain->SetBranchAddress("el_vy", &el_vy, &b_el_vy);
   fChain->SetBranchAddress("el_vz", &el_vz, &b_el_vz);
   fChain->SetBranchAddress("el_hasGsfTrack", &el_hasGsfTrack, &b_el_hasGsfTrack);
   fChain->SetBranchAddress("el_gsfTrack_d0", &el_gsfTrack_d0, &b_el_gsfTrack_d0);
   fChain->SetBranchAddress("el_gsfTrack_z0", &el_gsfTrack_z0, &b_el_gsfTrack_z0);
   fChain->SetBranchAddress("el_gsfTrack_d0Error", &el_gsfTrack_d0Error, &b_el_gsfTrack_d0Error);
   fChain->SetBranchAddress("el_gsfTrack_z0Error", &el_gsfTrack_z0Error, &b_el_gsfTrack_z0Error);
   fChain->SetBranchAddress("el_gsfTrack_PV_dxy", &el_gsfTrack_PV_dxy, &b_el_gsfTrack_PV_dxy);
   fChain->SetBranchAddress("el_gsfTrack_PV_dz", &el_gsfTrack_PV_dz, &b_el_gsfTrack_PV_dz);
   fChain->SetBranchAddress("el_gsfTrack_dxyError", &el_gsfTrack_dxyError, &b_el_gsfTrack_dxyError);
   fChain->SetBranchAddress("el_gsfTrack_dzError", &el_gsfTrack_dzError, &b_el_gsfTrack_dzError);
   fChain->SetBranchAddress("el_gsfTrack_normalizedChi2", &el_gsfTrack_normalizedChi2, &b_el_gsfTrack_normalizedChi2);
   fChain->SetBranchAddress("el_superCluster_eta", &el_superCluster_eta, &b_el_superCluster_eta);
   fChain->SetBranchAddress("el_superCluster_phi", &el_superCluster_phi, &b_el_superCluster_phi);
   fChain->SetBranchAddress("el_superCluster_energy", &el_superCluster_energy, &b_el_superCluster_energy);
   fChain->SetBranchAddress("el_superCluster_etaWidth", &el_superCluster_etaWidth, &b_el_superCluster_etaWidth);
   fChain->SetBranchAddress("el_superCluster_phiWidth", &el_superCluster_phiWidth, &b_el_superCluster_phiWidth);
   fChain->SetBranchAddress("el_e5x5", &el_e5x5, &b_el_e5x5);
   fChain->SetBranchAddress("el_sigmaEtaEta", &el_sigmaEtaEta, &b_el_sigmaEtaEta);
   fChain->SetBranchAddress("el_sigmaIetaIeta", &el_sigmaIetaIeta, &b_el_sigmaIetaIeta);
   fChain->SetBranchAddress("el_sigmaIphiIphi", &el_sigmaIphiIphi, &b_el_sigmaIphiIphi);
   fChain->SetBranchAddress("el_sigmaIetaIphi", &el_sigmaIetaIphi, &b_el_sigmaIetaIphi);
   fChain->SetBranchAddress("el_full5x5_sigmaIphiIphi", &el_full5x5_sigmaIphiIphi, &b_el_full5x5_sigmaIphiIphi);
   fChain->SetBranchAddress("el_full5x5_sigmaEtaEta", &el_full5x5_sigmaEtaEta, &b_el_full5x5_sigmaEtaEta);
   fChain->SetBranchAddress("el_full5x5_sigmaIetaIeta", &el_full5x5_sigmaIetaIeta, &b_el_full5x5_sigmaIetaIeta);
   fChain->SetBranchAddress("el_full5x5_sigmaIetaIphi", &el_full5x5_sigmaIetaIphi, &b_el_full5x5_sigmaIetaIphi);
   fChain->SetBranchAddress("el_full5x5_r9", &el_full5x5_r9, &b_el_full5x5_r9);
   fChain->SetBranchAddress("el_full5x5_e1x5", &el_full5x5_e1x5, &b_el_full5x5_e1x5);
   fChain->SetBranchAddress("el_full5x5_e5x5", &el_full5x5_e5x5, &b_el_full5x5_e5x5);
   fChain->SetBranchAddress("el_full5x5_e2x5Max", &el_full5x5_e2x5Max, &b_el_full5x5_e2x5Max);
   fChain->SetBranchAddress("el_expectedMissingOuterHits", &el_expectedMissingOuterHits, &b_el_expectedMissingOuterHits);
   fChain->SetBranchAddress("el_numberOfValidPixelHits", &el_numberOfValidPixelHits, &b_el_numberOfValidPixelHits);
   fChain->SetBranchAddress("el_numberOfLostPixelHits", &el_numberOfLostPixelHits, &b_el_numberOfLostPixelHits);
   fChain->SetBranchAddress("el_trackerLayersWithMeasurement", &el_trackerLayersWithMeasurement, &b_el_trackerLayersWithMeasurement);
   fChain->SetBranchAddress("el_pixelLayersWithMeasurement", &el_pixelLayersWithMeasurement, &b_el_pixelLayersWithMeasurement);
   fChain->SetBranchAddress("el_trackerLayersWithoutMeasurement", &el_trackerLayersWithoutMeasurement, &b_el_trackerLayersWithoutMeasurement);
   fChain->SetBranchAddress("el_numberOfHits", &el_numberOfHits, &b_el_numberOfHits);
   fChain->SetBranchAddress("el_numberOfValidHits", &el_numberOfValidHits, &b_el_numberOfValidHits);
   fChain->SetBranchAddress("el_hadronicOverEm", &el_hadronicOverEm, &b_el_hadronicOverEm);
   fChain->SetBranchAddress("el_numberOfLostHits", &el_numberOfLostHits, &b_el_numberOfLostHits);
   fChain->SetBranchAddress("el_numberOfLostHitsDefault", &el_numberOfLostHitsDefault, &b_el_numberOfLostHitsDefault);
   fChain->SetBranchAddress("el_fbrem", &el_fbrem, &b_el_fbrem);
   fChain->SetBranchAddress("el_kf_normalizedChi2", &el_kf_normalizedChi2, &b_el_kf_normalizedChi2);
   fChain->SetBranchAddress("el_gsf_normalizedChi2", &el_gsf_normalizedChi2, &b_el_gsf_normalizedChi2);
   fChain->SetBranchAddress("el_deltaEtaSuperClusterTrackAtVtx", &el_deltaEtaSuperClusterTrackAtVtx, &b_el_deltaEtaSuperClusterTrackAtVtx);
   fChain->SetBranchAddress("el_deltaPhiSuperClusterTrackAtVtx", &el_deltaPhiSuperClusterTrackAtVtx, &b_el_deltaPhiSuperClusterTrackAtVtx);
   fChain->SetBranchAddress("el_deltaEtaSeedClusterTrackAtCalo", &el_deltaEtaSeedClusterTrackAtCalo, &b_el_deltaEtaSeedClusterTrackAtCalo);
   fChain->SetBranchAddress("el_deltaPhiSeedClusterTrackAtCalo", &el_deltaPhiSeedClusterTrackAtCalo, &b_el_deltaPhiSeedClusterTrackAtCalo);
   fChain->SetBranchAddress("el_eSuperClusterOverP", &el_eSuperClusterOverP, &b_el_eSuperClusterOverP);
   fChain->SetBranchAddress("el_IoEmIoP", &el_IoEmIoP, &b_el_IoEmIoP);
   fChain->SetBranchAddress("el_ooEmooP", &el_ooEmooP, &b_el_ooEmooP);
   fChain->SetBranchAddress("el_eleEoPout", &el_eleEoPout, &b_el_eleEoPout);
   fChain->SetBranchAddress("el_mvaNonTrigV0", &el_mvaNonTrigV0, &b_el_mvaNonTrigV0);
   fChain->SetBranchAddress("el_mvaNonTrigCat", &el_mvaNonTrigCat, &b_el_mvaNonTrigCat);
   fChain->SetBranchAddress("el_vetoCBId", &el_vetoCBId, &b_el_vetoCBId);
   fChain->SetBranchAddress("el_looseCBId", &el_looseCBId, &b_el_looseCBId);
   fChain->SetBranchAddress("el_mediumCBId", &el_mediumCBId, &b_el_mediumCBId);
   fChain->SetBranchAddress("el_tightCBId", &el_tightCBId, &b_el_tightCBId);
   fChain->SetBranchAddress("el_heepCBId", &el_heepCBId, &b_el_heepCBId);
   fChain->SetBranchAddress("el_mediumMVAId", &el_mediumMVAId, &b_el_mediumMVAId);
   fChain->SetBranchAddress("el_tightMVAId", &el_tightMVAId, &b_el_tightMVAId);
   fChain->SetBranchAddress("el_hasMCMatch", &el_hasMCMatch, &b_el_hasMCMatch);
   fChain->SetBranchAddress("el_gen_pt", &el_gen_pt, &b_el_gen_pt);
   fChain->SetBranchAddress("el_gen_eta", &el_gen_eta, &b_el_gen_eta);
   fChain->SetBranchAddress("el_gen_phi", &el_gen_phi, &b_el_gen_phi);
   fChain->SetBranchAddress("el_gen_m", &el_gen_m, &b_el_gen_m);
   fChain->SetBranchAddress("el_gen_status", &el_gen_status, &b_el_gen_status);
   fChain->SetBranchAddress("el_gen_id", &el_gen_id, &b_el_gen_id);
   fChain->SetBranchAddress("el_gen_charge", &el_gen_charge, &b_el_gen_charge);
   fChain->SetBranchAddress("el_gen_dr", &el_gen_dr, &b_el_gen_dr);
   fChain->SetBranchAddress("el_hasMCMatchPAT", &el_hasMCMatchPAT, &b_el_hasMCMatchPAT);
   fChain->SetBranchAddress("el_genPAT_pt", &el_genPAT_pt, &b_el_genPAT_pt);
   fChain->SetBranchAddress("el_genPAT_eta", &el_genPAT_eta, &b_el_genPAT_eta);
   fChain->SetBranchAddress("el_genPAT_phi", &el_genPAT_phi, &b_el_genPAT_phi);
   fChain->SetBranchAddress("el_genPAT_m", &el_genPAT_m, &b_el_genPAT_m);
   fChain->SetBranchAddress("el_genPAT_status", &el_genPAT_status, &b_el_genPAT_status);
   fChain->SetBranchAddress("el_genPAT_id", &el_genPAT_id, &b_el_genPAT_id);
   fChain->SetBranchAddress("el_genPAT_charge", &el_genPAT_charge, &b_el_genPAT_charge);
   fChain->SetBranchAddress("el_hasMatchedConversion", &el_hasMatchedConversion, &b_el_hasMatchedConversion);
   fChain->SetBranchAddress("el_expectedMissingInnerHits", &el_expectedMissingInnerHits, &b_el_expectedMissingInnerHits);
   fChain->SetBranchAddress("mu_n", &mu_n, &b_mu_n);
   fChain->SetBranchAddress("mu_pt", &mu_pt, &b_mu_pt);
   fChain->SetBranchAddress("mu_eta", &mu_eta, &b_mu_eta);
   fChain->SetBranchAddress("mu_phi", &mu_phi, &b_mu_phi);
   fChain->SetBranchAddress("mu_m", &mu_m, &b_mu_m);
   fChain->SetBranchAddress("mu_E", &mu_E, &b_mu_E);
   fChain->SetBranchAddress("mu_id", &mu_id, &b_mu_id);
   fChain->SetBranchAddress("mu_charge", &mu_charge, &b_mu_charge);
   fChain->SetBranchAddress("mu_ip3d", &mu_ip3d, &b_mu_ip3d);
   fChain->SetBranchAddress("mu_ip3dErr", &mu_ip3dErr, &b_mu_ip3dErr);
   fChain->SetBranchAddress("mu_ip2d", &mu_ip2d, &b_mu_ip2d);
   fChain->SetBranchAddress("mu_ip2dErr", &mu_ip2dErr, &b_mu_ip2dErr);
   fChain->SetBranchAddress("mu_ip3dBS", &mu_ip3dBS, &b_mu_ip3dBS);
   fChain->SetBranchAddress("mu_ip3dBSErr", &mu_ip3dBSErr, &b_mu_ip3dBSErr);
   fChain->SetBranchAddress("mu_neutralHadronIso", &mu_neutralHadronIso, &b_mu_neutralHadronIso);
   fChain->SetBranchAddress("mu_chargedHadronIso", &mu_chargedHadronIso, &b_mu_chargedHadronIso);
   fChain->SetBranchAddress("mu_puChargedHadronIso", &mu_puChargedHadronIso, &b_mu_puChargedHadronIso);
   fChain->SetBranchAddress("mu_ecalIso", &mu_ecalIso, &b_mu_ecalIso);
   fChain->SetBranchAddress("mu_hcalIso", &mu_hcalIso, &b_mu_hcalIso);
   fChain->SetBranchAddress("mu_photonIso", &mu_photonIso, &b_mu_photonIso);
   fChain->SetBranchAddress("mu_trackIso", &mu_trackIso, &b_mu_trackIso);
   fChain->SetBranchAddress("mu_pfIso03_sumChargedHadronPt", &mu_pfIso03_sumChargedHadronPt, &b_mu_pfIso03_sumChargedHadronPt);
   fChain->SetBranchAddress("mu_pfIso03_sumChargedParticlePt", &mu_pfIso03_sumChargedParticlePt, &b_mu_pfIso03_sumChargedParticlePt);
   fChain->SetBranchAddress("mu_pfIso03_sumNeutralHadronEt", &mu_pfIso03_sumNeutralHadronEt, &b_mu_pfIso03_sumNeutralHadronEt);
   fChain->SetBranchAddress("mu_pfIso03_sumNeutralHadronEtHighThreshold", &mu_pfIso03_sumNeutralHadronEtHighThreshold, &b_mu_pfIso03_sumNeutralHadronEtHighThreshold);
   fChain->SetBranchAddress("mu_pfIso03_sumPhotonEt", &mu_pfIso03_sumPhotonEt, &b_mu_pfIso03_sumPhotonEt);
   fChain->SetBranchAddress("mu_pfIso03_sumPhotonEtHighThreshold", &mu_pfIso03_sumPhotonEtHighThreshold, &b_mu_pfIso03_sumPhotonEtHighThreshold);
   fChain->SetBranchAddress("mu_pfIso03_sumPUPt", &mu_pfIso03_sumPUPt, &b_mu_pfIso03_sumPUPt);
   fChain->SetBranchAddress("mu_pfIso04_sumChargedHadronPt", &mu_pfIso04_sumChargedHadronPt, &b_mu_pfIso04_sumChargedHadronPt);
   fChain->SetBranchAddress("mu_pfIso04_sumChargedParticlePt", &mu_pfIso04_sumChargedParticlePt, &b_mu_pfIso04_sumChargedParticlePt);
   fChain->SetBranchAddress("mu_pfIso04_sumNeutralHadronEt", &mu_pfIso04_sumNeutralHadronEt, &b_mu_pfIso04_sumNeutralHadronEt);
   fChain->SetBranchAddress("mu_pfIso04_sumNeutralHadronEtHighThreshold", &mu_pfIso04_sumNeutralHadronEtHighThreshold, &b_mu_pfIso04_sumNeutralHadronEtHighThreshold);
   fChain->SetBranchAddress("mu_pfIso04_sumPhotonEt", &mu_pfIso04_sumPhotonEt, &b_mu_pfIso04_sumPhotonEt);
   fChain->SetBranchAddress("mu_pfIso04_sumPhotonEtHighThreshold", &mu_pfIso04_sumPhotonEtHighThreshold, &b_mu_pfIso04_sumPhotonEtHighThreshold);
   fChain->SetBranchAddress("mu_pfIso04_sumPUPt", &mu_pfIso04_sumPUPt, &b_mu_pfIso04_sumPUPt);
   fChain->SetBranchAddress("mu_isGlobalMuon", &mu_isGlobalMuon, &b_mu_isGlobalMuon);
   fChain->SetBranchAddress("mu_isTrackerMuon", &mu_isTrackerMuon, &b_mu_isTrackerMuon);
   fChain->SetBranchAddress("mu_isStandAloneMuon", &mu_isStandAloneMuon, &b_mu_isStandAloneMuon);
   fChain->SetBranchAddress("mu_isCaloMuon", &mu_isCaloMuon, &b_mu_isCaloMuon);
   fChain->SetBranchAddress("mu_isPFMuon", &mu_isPFMuon, &b_mu_isPFMuon);
   fChain->SetBranchAddress("mu_isRPCMuon", &mu_isRPCMuon, &b_mu_isRPCMuon);
   fChain->SetBranchAddress("mu_vx", &mu_vx, &b_mu_vx);
   fChain->SetBranchAddress("mu_vy", &mu_vy, &b_mu_vy);
   fChain->SetBranchAddress("mu_vz", &mu_vz, &b_mu_vz);
   fChain->SetBranchAddress("mu_numberOfMatches", &mu_numberOfMatches, &b_mu_numberOfMatches);
   fChain->SetBranchAddress("mu_numberOfMatchedStations", &mu_numberOfMatchedStations, &b_mu_numberOfMatchedStations);
   fChain->SetBranchAddress("mu_segmentCompatibility", &mu_segmentCompatibility, &b_mu_segmentCompatibility);
   fChain->SetBranchAddress("mu_caloCompatibility", &mu_caloCompatibility, &b_mu_caloCompatibility);
   fChain->SetBranchAddress("mu_combinedQuality_chi2LocalPosition", &mu_combinedQuality_chi2LocalPosition, &b_mu_combinedQuality_chi2LocalPosition);
   fChain->SetBranchAddress("mu_combinedQuality_trkKink", &mu_combinedQuality_trkKink, &b_mu_combinedQuality_trkKink);
   fChain->SetBranchAddress("mu_isLooseMuon", &mu_isLooseMuon, &b_mu_isLooseMuon);
   fChain->SetBranchAddress("mu_isMediumMuon", &mu_isMediumMuon, &b_mu_isMediumMuon);
   fChain->SetBranchAddress("mu_isTightMuon", &mu_isTightMuon, &b_mu_isTightMuon);
   fChain->SetBranchAddress("mu_isSoftMuon", &mu_isSoftMuon, &b_mu_isSoftMuon);
   fChain->SetBranchAddress("mu_isHighPtMuon", &mu_isHighPtMuon, &b_mu_isHighPtMuon);
   fChain->SetBranchAddress("mu_hasGlobalTrack", &mu_hasGlobalTrack, &b_mu_hasGlobalTrack);
   fChain->SetBranchAddress("mu_globalTrack_d0", &mu_globalTrack_d0, &b_mu_globalTrack_d0);
   fChain->SetBranchAddress("mu_globalTrack_z0", &mu_globalTrack_z0, &b_mu_globalTrack_z0);
   fChain->SetBranchAddress("mu_globalTrack_d0Error", &mu_globalTrack_d0Error, &b_mu_globalTrack_d0Error);
   fChain->SetBranchAddress("mu_globalTrack_z0Error", &mu_globalTrack_z0Error, &b_mu_globalTrack_z0Error);
   fChain->SetBranchAddress("mu_globalTrack_PV_dxy", &mu_globalTrack_PV_dxy, &b_mu_globalTrack_PV_dxy);
   fChain->SetBranchAddress("mu_globalTrack_PV_dz", &mu_globalTrack_PV_dz, &b_mu_globalTrack_PV_dz);
   fChain->SetBranchAddress("mu_globalTrack_RP_dxy", &mu_globalTrack_RP_dxy, &b_mu_globalTrack_RP_dxy);
   fChain->SetBranchAddress("mu_globalTrack_RP_dz", &mu_globalTrack_RP_dz, &b_mu_globalTrack_RP_dz);
   fChain->SetBranchAddress("mu_globalTrack_dxyError", &mu_globalTrack_dxyError, &b_mu_globalTrack_dxyError);
   fChain->SetBranchAddress("mu_globalTrack_dzError", &mu_globalTrack_dzError, &b_mu_globalTrack_dzError);
   fChain->SetBranchAddress("mu_globalTrack_normalizedChi2", &mu_globalTrack_normalizedChi2, &b_mu_globalTrack_normalizedChi2);
   fChain->SetBranchAddress("mu_globalTrack_numberOfValidHits", &mu_globalTrack_numberOfValidHits, &b_mu_globalTrack_numberOfValidHits);
   fChain->SetBranchAddress("mu_globalTrack_numberOfValidMuonHits", &mu_globalTrack_numberOfValidMuonHits, &b_mu_globalTrack_numberOfValidMuonHits);
   fChain->SetBranchAddress("mu_globalTrack_numberOfLostHits", &mu_globalTrack_numberOfLostHits, &b_mu_globalTrack_numberOfLostHits);
   fChain->SetBranchAddress("mu_globalTrack_pt", &mu_globalTrack_pt, &b_mu_globalTrack_pt);
   fChain->SetBranchAddress("mu_globalTrack_eta", &mu_globalTrack_eta, &b_mu_globalTrack_eta);
   fChain->SetBranchAddress("mu_globalTrack_phi", &mu_globalTrack_phi, &b_mu_globalTrack_phi);
   fChain->SetBranchAddress("mu_globalTrack_ptError", &mu_globalTrack_ptError, &b_mu_globalTrack_ptError);
   fChain->SetBranchAddress("mu_globalTrack_etaError", &mu_globalTrack_etaError, &b_mu_globalTrack_etaError);
   fChain->SetBranchAddress("mu_globalTrack_phiError", &mu_globalTrack_phiError, &b_mu_globalTrack_phiError);
   fChain->SetBranchAddress("mu_globalTrack_vx", &mu_globalTrack_vx, &b_mu_globalTrack_vx);
   fChain->SetBranchAddress("mu_globalTrack_vy", &mu_globalTrack_vy, &b_mu_globalTrack_vy);
   fChain->SetBranchAddress("mu_globalTrack_vz", &mu_globalTrack_vz, &b_mu_globalTrack_vz);
   fChain->SetBranchAddress("mu_globalTrack_qoverp", &mu_globalTrack_qoverp, &b_mu_globalTrack_qoverp);
   fChain->SetBranchAddress("mu_globalTrack_qoverpError", &mu_globalTrack_qoverpError, &b_mu_globalTrack_qoverpError);
   fChain->SetBranchAddress("mu_globalTrack_charge", &mu_globalTrack_charge, &b_mu_globalTrack_charge);
   fChain->SetBranchAddress("mu_bestTrackType", &mu_bestTrackType, &b_mu_bestTrackType);
   fChain->SetBranchAddress("mu_hasBestTrack", &mu_hasBestTrack, &b_mu_hasBestTrack);
   fChain->SetBranchAddress("mu_bestTrack_d0", &mu_bestTrack_d0, &b_mu_bestTrack_d0);
   fChain->SetBranchAddress("mu_bestTrack_z0", &mu_bestTrack_z0, &b_mu_bestTrack_z0);
   fChain->SetBranchAddress("mu_bestTrack_d0Error", &mu_bestTrack_d0Error, &b_mu_bestTrack_d0Error);
   fChain->SetBranchAddress("mu_bestTrack_z0Error", &mu_bestTrack_z0Error, &b_mu_bestTrack_z0Error);
   fChain->SetBranchAddress("mu_bestTrack_PV_dxy", &mu_bestTrack_PV_dxy, &b_mu_bestTrack_PV_dxy);
   fChain->SetBranchAddress("mu_bestTrack_PV_dz", &mu_bestTrack_PV_dz, &b_mu_bestTrack_PV_dz);
   fChain->SetBranchAddress("mu_bestTrack_dxyError", &mu_bestTrack_dxyError, &b_mu_bestTrack_dxyError);
   fChain->SetBranchAddress("mu_bestTrack_dzError", &mu_bestTrack_dzError, &b_mu_bestTrack_dzError);
   fChain->SetBranchAddress("mu_bestTrack_normalizedChi2", &mu_bestTrack_normalizedChi2, &b_mu_bestTrack_normalizedChi2);
   fChain->SetBranchAddress("mu_bestTrack_numberOfValidHits", &mu_bestTrack_numberOfValidHits, &b_mu_bestTrack_numberOfValidHits);
   fChain->SetBranchAddress("mu_bestTrack_numberOfLostHits", &mu_bestTrack_numberOfLostHits, &b_mu_bestTrack_numberOfLostHits);
   fChain->SetBranchAddress("mu_bestTrack_pt", &mu_bestTrack_pt, &b_mu_bestTrack_pt);
   fChain->SetBranchAddress("mu_bestTrack_eta", &mu_bestTrack_eta, &b_mu_bestTrack_eta);
   fChain->SetBranchAddress("mu_bestTrack_phi", &mu_bestTrack_phi, &b_mu_bestTrack_phi);
   fChain->SetBranchAddress("mu_bestTrack_ptError", &mu_bestTrack_ptError, &b_mu_bestTrack_ptError);
   fChain->SetBranchAddress("mu_bestTrack_etaError", &mu_bestTrack_etaError, &b_mu_bestTrack_etaError);
   fChain->SetBranchAddress("mu_bestTrack_phiError", &mu_bestTrack_phiError, &b_mu_bestTrack_phiError);
   fChain->SetBranchAddress("mu_bestTrack_vx", &mu_bestTrack_vx, &b_mu_bestTrack_vx);
   fChain->SetBranchAddress("mu_bestTrack_vy", &mu_bestTrack_vy, &b_mu_bestTrack_vy);
   fChain->SetBranchAddress("mu_bestTrack_vz", &mu_bestTrack_vz, &b_mu_bestTrack_vz);
   fChain->SetBranchAddress("mu_bestTrack_qoverp", &mu_bestTrack_qoverp, &b_mu_bestTrack_qoverp);
   fChain->SetBranchAddress("mu_bestTrack_qoverpError", &mu_bestTrack_qoverpError, &b_mu_bestTrack_qoverpError);
   fChain->SetBranchAddress("mu_bestTrack_charge", &mu_bestTrack_charge, &b_mu_bestTrack_charge);
   fChain->SetBranchAddress("mu_hasInnerTrack", &mu_hasInnerTrack, &b_mu_hasInnerTrack);
   fChain->SetBranchAddress("mu_innerTrack_d0", &mu_innerTrack_d0, &b_mu_innerTrack_d0);
   fChain->SetBranchAddress("mu_innerTrack_z0", &mu_innerTrack_z0, &b_mu_innerTrack_z0);
   fChain->SetBranchAddress("mu_innerTrack_d0Error", &mu_innerTrack_d0Error, &b_mu_innerTrack_d0Error);
   fChain->SetBranchAddress("mu_innerTrack_z0Error", &mu_innerTrack_z0Error, &b_mu_innerTrack_z0Error);
   fChain->SetBranchAddress("mu_innerTrack_PV_dxy", &mu_innerTrack_PV_dxy, &b_mu_innerTrack_PV_dxy);
   fChain->SetBranchAddress("mu_innerTrack_PV_dz", &mu_innerTrack_PV_dz, &b_mu_innerTrack_PV_dz);
   fChain->SetBranchAddress("mu_innerTrack_dxyError", &mu_innerTrack_dxyError, &b_mu_innerTrack_dxyError);
   fChain->SetBranchAddress("mu_innerTrack_dzError", &mu_innerTrack_dzError, &b_mu_innerTrack_dzError);
   fChain->SetBranchAddress("mu_innerTrack_normalizedChi2", &mu_innerTrack_normalizedChi2, &b_mu_innerTrack_normalizedChi2);
   fChain->SetBranchAddress("mu_innerTrack_numberOfValidHits", &mu_innerTrack_numberOfValidHits, &b_mu_innerTrack_numberOfValidHits);
   fChain->SetBranchAddress("mu_innerTrack_numberOfLostHits", &mu_innerTrack_numberOfLostHits, &b_mu_innerTrack_numberOfLostHits);
   fChain->SetBranchAddress("mu_innerTrack_pt", &mu_innerTrack_pt, &b_mu_innerTrack_pt);
   fChain->SetBranchAddress("mu_innerTrack_eta", &mu_innerTrack_eta, &b_mu_innerTrack_eta);
   fChain->SetBranchAddress("mu_innerTrack_phi", &mu_innerTrack_phi, &b_mu_innerTrack_phi);
   fChain->SetBranchAddress("mu_innerTrack_ptError", &mu_innerTrack_ptError, &b_mu_innerTrack_ptError);
   fChain->SetBranchAddress("mu_innerTrack_etaError", &mu_innerTrack_etaError, &b_mu_innerTrack_etaError);
   fChain->SetBranchAddress("mu_innerTrack_phiError", &mu_innerTrack_phiError, &b_mu_innerTrack_phiError);
   fChain->SetBranchAddress("mu_innerTrack_vx", &mu_innerTrack_vx, &b_mu_innerTrack_vx);
   fChain->SetBranchAddress("mu_innerTrack_vy", &mu_innerTrack_vy, &b_mu_innerTrack_vy);
   fChain->SetBranchAddress("mu_innerTrack_vz", &mu_innerTrack_vz, &b_mu_innerTrack_vz);
   fChain->SetBranchAddress("mu_innerTrack_qoverp", &mu_innerTrack_qoverp, &b_mu_innerTrack_qoverp);
   fChain->SetBranchAddress("mu_innerTrack_qoverpError", &mu_innerTrack_qoverpError, &b_mu_innerTrack_qoverpError);
   fChain->SetBranchAddress("mu_innerTrack_charge", &mu_innerTrack_charge, &b_mu_innerTrack_charge);
   fChain->SetBranchAddress("mu_innerTrack_trackerLayersWithMeasurement", &mu_innerTrack_trackerLayersWithMeasurement, &b_mu_innerTrack_trackerLayersWithMeasurement);
   fChain->SetBranchAddress("mu_innerTrack_numberOfValidPixelHits", &mu_innerTrack_numberOfValidPixelHits, &b_mu_innerTrack_numberOfValidPixelHits);
   fChain->SetBranchAddress("mu_innerTrack_numberOfLostPixelHits", &mu_innerTrack_numberOfLostPixelHits, &b_mu_innerTrack_numberOfLostPixelHits);
   fChain->SetBranchAddress("mu_innerTrack_validFraction", &mu_innerTrack_validFraction, &b_mu_innerTrack_validFraction);
   fChain->SetBranchAddress("mu_type", &mu_type, &b_mu_type);
   fChain->SetBranchAddress("mu_hasMCMatch", &mu_hasMCMatch, &b_mu_hasMCMatch);
   fChain->SetBranchAddress("mu_gen_pt", &mu_gen_pt, &b_mu_gen_pt);
   fChain->SetBranchAddress("mu_gen_eta", &mu_gen_eta, &b_mu_gen_eta);
   fChain->SetBranchAddress("mu_gen_phi", &mu_gen_phi, &b_mu_gen_phi);
   fChain->SetBranchAddress("mu_gen_m", &mu_gen_m, &b_mu_gen_m);
   fChain->SetBranchAddress("mu_gen_status", &mu_gen_status, &b_mu_gen_status);
   fChain->SetBranchAddress("mu_gen_id", &mu_gen_id, &b_mu_gen_id);
   fChain->SetBranchAddress("mu_gen_charge", &mu_gen_charge, &b_mu_gen_charge);
   fChain->SetBranchAddress("mu_gen_dr", &mu_gen_dr, &b_mu_gen_dr);
   fChain->SetBranchAddress("mu_hasMCMatchPAT", &mu_hasMCMatchPAT, &b_mu_hasMCMatchPAT);
   fChain->SetBranchAddress("mu_genPAT_pt", &mu_genPAT_pt, &b_mu_genPAT_pt);
   fChain->SetBranchAddress("mu_genPAT_eta", &mu_genPAT_eta, &b_mu_genPAT_eta);
   fChain->SetBranchAddress("mu_genPAT_phi", &mu_genPAT_phi, &b_mu_genPAT_phi);
   fChain->SetBranchAddress("mu_genPAT_m", &mu_genPAT_m, &b_mu_genPAT_m);
   fChain->SetBranchAddress("mu_genPAT_status", &mu_genPAT_status, &b_mu_genPAT_status);
   fChain->SetBranchAddress("mu_genPAT_id", &mu_genPAT_id, &b_mu_genPAT_id);
   fChain->SetBranchAddress("mu_genPAT_charge", &mu_genPAT_charge, &b_mu_genPAT_charge);
   fChain->SetBranchAddress("tau_n", &tau_n, &b_tau_n);
   fChain->SetBranchAddress("tau_pt", &tau_pt, &b_tau_pt);
   fChain->SetBranchAddress("tau_eta", &tau_eta, &b_tau_eta);
   fChain->SetBranchAddress("tau_phi", &tau_phi, &b_tau_phi);
   fChain->SetBranchAddress("tau_m", &tau_m, &b_tau_m);
   fChain->SetBranchAddress("tau_E", &tau_E, &b_tau_E);
   fChain->SetBranchAddress("tau_id", &tau_id, &b_tau_id);
   fChain->SetBranchAddress("tau_charge", &tau_charge, &b_tau_charge);
   fChain->SetBranchAddress("tau_hasLeadChargedHadrCand", &tau_hasLeadChargedHadrCand, &b_tau_hasLeadChargedHadrCand);
   fChain->SetBranchAddress("tau_leadingTrackPt", &tau_leadingTrackPt, &b_tau_leadingTrackPt);
   fChain->SetBranchAddress("tau_leadingTrackCharge", &tau_leadingTrackCharge, &b_tau_leadingTrackCharge);
   fChain->SetBranchAddress("tau_leadingTrackDz", &tau_leadingTrackDz, &b_tau_leadingTrackDz);
   fChain->SetBranchAddress("tau_leadingTrackDxy", &tau_leadingTrackDxy, &b_tau_leadingTrackDxy);
   fChain->SetBranchAddress("tau_decayMode", &tau_decayMode, &b_tau_decayMode);
   fChain->SetBranchAddress("tau_decayModeFindingOldDMs", &tau_decayModeFindingOldDMs, &b_tau_decayModeFindingOldDMs);
   fChain->SetBranchAddress("tau_decayModeFindingNewDMs", &tau_decayModeFindingNewDMs, &b_tau_decayModeFindingNewDMs);
   fChain->SetBranchAddress("tau_puCorrPtSum", &tau_puCorrPtSum, &b_tau_puCorrPtSum);
   fChain->SetBranchAddress("tau_neutralIsoPtSum", &tau_neutralIsoPtSum, &b_tau_neutralIsoPtSum);
   fChain->SetBranchAddress("tau_chargedIsoPtSum", &tau_chargedIsoPtSum, &b_tau_chargedIsoPtSum);
   fChain->SetBranchAddress("tau_byCombinedIsolationDeltaBetaCorrRaw3Hits", &tau_byCombinedIsolationDeltaBetaCorrRaw3Hits, &b_tau_byCombinedIsolationDeltaBetaCorrRaw3Hits);
   fChain->SetBranchAddress("tau_byLooseCombinedIsolationDeltaBetaCorr3Hits", &tau_byLooseCombinedIsolationDeltaBetaCorr3Hits, &b_tau_byLooseCombinedIsolationDeltaBetaCorr3Hits);
   fChain->SetBranchAddress("tau_byMediumCombinedIsolationDeltaBetaCorr3Hits", &tau_byMediumCombinedIsolationDeltaBetaCorr3Hits, &b_tau_byMediumCombinedIsolationDeltaBetaCorr3Hits);
   fChain->SetBranchAddress("tau_byTightCombinedIsolationDeltaBetaCorr3Hits", &tau_byTightCombinedIsolationDeltaBetaCorr3Hits, &b_tau_byTightCombinedIsolationDeltaBetaCorr3Hits);
   fChain->SetBranchAddress("tau_byLooseIsolationMVArun2v1DBdR03oldDMwLT", &tau_byLooseIsolationMVArun2v1DBdR03oldDMwLT, &b_tau_byLooseIsolationMVArun2v1DBdR03oldDMwLT);
   fChain->SetBranchAddress("tau_byMediumIsolationMVArun2v1DBdR03oldDMwLT", &tau_byMediumIsolationMVArun2v1DBdR03oldDMwLT, &b_tau_byMediumIsolationMVArun2v1DBdR03oldDMwLT);
   fChain->SetBranchAddress("tau_byTightIsolationMVArun2v1DBdR03oldDMwLT", &tau_byTightIsolationMVArun2v1DBdR03oldDMwLT, &b_tau_byTightIsolationMVArun2v1DBdR03oldDMwLT);
   fChain->SetBranchAddress("tau_byVTightIsolationMVArun2v1DBdR03oldDMwLT", &tau_byVTightIsolationMVArun2v1DBdR03oldDMwLT, &b_tau_byVTightIsolationMVArun2v1DBdR03oldDMwLT);
   fChain->SetBranchAddress("tau_againstMuonLoose3", &tau_againstMuonLoose3, &b_tau_againstMuonLoose3);
   fChain->SetBranchAddress("tau_againstMuonTight3", &tau_againstMuonTight3, &b_tau_againstMuonTight3);
   fChain->SetBranchAddress("tau_pfEssential_jet_pt", &tau_pfEssential_jet_pt, &b_tau_pfEssential_jet_pt);
   fChain->SetBranchAddress("tau_pfEssential_jet_eta", &tau_pfEssential_jet_eta, &b_tau_pfEssential_jet_eta);
   fChain->SetBranchAddress("tau_pfEssential_jet_phi", &tau_pfEssential_jet_phi, &b_tau_pfEssential_jet_phi);
   fChain->SetBranchAddress("tau_pfEssential_jet_m", &tau_pfEssential_jet_m, &b_tau_pfEssential_jet_m);
   fChain->SetBranchAddress("tau_pfEssential_jetCorr_pt", &tau_pfEssential_jetCorr_pt, &b_tau_pfEssential_jetCorr_pt);
   fChain->SetBranchAddress("tau_pfEssential_jetCorr_eta", &tau_pfEssential_jetCorr_eta, &b_tau_pfEssential_jetCorr_eta);
   fChain->SetBranchAddress("tau_pfEssential_jetCorr_phi", &tau_pfEssential_jetCorr_phi, &b_tau_pfEssential_jetCorr_phi);
   fChain->SetBranchAddress("tau_pfEssential_jetCorr_m", &tau_pfEssential_jetCorr_m, &b_tau_pfEssential_jetCorr_m);
   fChain->SetBranchAddress("tau_pfEssential_hasSV", &tau_pfEssential_hasSV, &b_tau_pfEssential_hasSV);
   fChain->SetBranchAddress("tau_pfEssential_sv_x", &tau_pfEssential_sv_x, &b_tau_pfEssential_sv_x);
   fChain->SetBranchAddress("tau_pfEssential_sv_y", &tau_pfEssential_sv_y, &b_tau_pfEssential_sv_y);
   fChain->SetBranchAddress("tau_pfEssential_sv_z", &tau_pfEssential_sv_z, &b_tau_pfEssential_sv_z);
   fChain->SetBranchAddress("tau_pfEssential_flightLengthSig", &tau_pfEssential_flightLengthSig, &b_tau_pfEssential_flightLengthSig);
   fChain->SetBranchAddress("tau_pfEssential_dxy", &tau_pfEssential_dxy, &b_tau_pfEssential_dxy);
   fChain->SetBranchAddress("tau_pfEssential_dxy_error", &tau_pfEssential_dxy_error, &b_tau_pfEssential_dxy_error);
   fChain->SetBranchAddress("tau_pfEssential_dxy_Sig", &tau_pfEssential_dxy_Sig, &b_tau_pfEssential_dxy_Sig);
   fChain->SetBranchAddress("jet_n", &jet_n, &b_jet_n);
   fChain->SetBranchAddress("jet_pt", &jet_pt, &b_jet_pt);
   fChain->SetBranchAddress("jet_eta", &jet_eta, &b_jet_eta);
   fChain->SetBranchAddress("jet_phi", &jet_phi, &b_jet_phi);
   fChain->SetBranchAddress("jet_m", &jet_m, &b_jet_m);
   fChain->SetBranchAddress("jet_E", &jet_E, &b_jet_E);
   fChain->SetBranchAddress("jet_ntrk", &jet_ntrk, &b_jet_ntrk);
   fChain->SetBranchAddress("jet_JBP", &jet_JBP, &b_jet_JBP);
   fChain->SetBranchAddress("jet_JP", &jet_JP, &b_jet_JP);
   fChain->SetBranchAddress("jet_TCHP", &jet_TCHP, &b_jet_TCHP);
   fChain->SetBranchAddress("jet_TCHE", &jet_TCHE, &b_jet_TCHE);
   fChain->SetBranchAddress("jet_SSVHE", &jet_SSVHE, &b_jet_SSVHE);
   fChain->SetBranchAddress("jet_SSVHP", &jet_SSVHP, &b_jet_SSVHP);
   fChain->SetBranchAddress("jet_CMVA", &jet_CMVA, &b_jet_CMVA);
   fChain->SetBranchAddress("jet_CSVv2", &jet_CSVv2, &b_jet_CSVv2);
   fChain->SetBranchAddress("jet_cMVAv2", &jet_cMVAv2, &b_jet_cMVAv2);
   fChain->SetBranchAddress("jet_charge", &jet_charge, &b_jet_charge);
   fChain->SetBranchAddress("jet_chargeVec", &jet_chargeVec, &b_jet_chargeVec);
   fChain->SetBranchAddress("jet_CharmCvsL", &jet_CharmCvsL, &b_jet_CharmCvsL);
   fChain->SetBranchAddress("jet_CharmCvsB", &jet_CharmCvsB, &b_jet_CharmCvsB);
   fChain->SetBranchAddress("jet_partonFlavour", &jet_partonFlavour, &b_jet_partonFlavour);
   fChain->SetBranchAddress("jet_hadronFlavour", &jet_hadronFlavour, &b_jet_hadronFlavour);
   fChain->SetBranchAddress("jet_neutralHadronEnergy", &jet_neutralHadronEnergy, &b_jet_neutralHadronEnergy);
   fChain->SetBranchAddress("jet_neutralEmEnergy", &jet_neutralEmEnergy, &b_jet_neutralEmEnergy);
   fChain->SetBranchAddress("jet_chargedHadronEnergy", &jet_chargedHadronEnergy, &b_jet_chargedHadronEnergy);
   fChain->SetBranchAddress("jet_chargedEmEnergy", &jet_chargedEmEnergy, &b_jet_chargedEmEnergy);
   fChain->SetBranchAddress("jet_electronEnergy", &jet_electronEnergy, &b_jet_electronEnergy);
   fChain->SetBranchAddress("jet_muonEnergy", &jet_muonEnergy, &b_jet_muonEnergy);
   fChain->SetBranchAddress("jet_photonEnergy", &jet_photonEnergy, &b_jet_photonEnergy);
   fChain->SetBranchAddress("jet_chargedMultiplicity", &jet_chargedMultiplicity, &b_jet_chargedMultiplicity);
   fChain->SetBranchAddress("jet_neutralMultiplicity", &jet_neutralMultiplicity, &b_jet_neutralMultiplicity);
   fChain->SetBranchAddress("jet_jetArea", &jet_jetArea, &b_jet_jetArea);
   fChain->SetBranchAddress("jet_jecFactorUncorrected", &jet_jecFactorUncorrected, &b_jet_jecFactorUncorrected);
   fChain->SetBranchAddress("jet_jecFactorL1FastJet", &jet_jecFactorL1FastJet, &b_jet_jecFactorL1FastJet);
   fChain->SetBranchAddress("jet_jecFactorL2Relative", &jet_jecFactorL2Relative, &b_jet_jecFactorL2Relative);
   fChain->SetBranchAddress("jet_jecFactorL3Absolute", &jet_jecFactorL3Absolute, &b_jet_jecFactorL3Absolute);
   fChain->SetBranchAddress("jet_neutralHadronEnergyFraction", &jet_neutralHadronEnergyFraction, &b_jet_neutralHadronEnergyFraction);
   fChain->SetBranchAddress("jet_neutralEmEnergyFraction", &jet_neutralEmEnergyFraction, &b_jet_neutralEmEnergyFraction);
   fChain->SetBranchAddress("jet_chargedHadronEnergyFraction", &jet_chargedHadronEnergyFraction, &b_jet_chargedHadronEnergyFraction);
   fChain->SetBranchAddress("jet_muonEnergyFraction", &jet_muonEnergyFraction, &b_jet_muonEnergyFraction);
   fChain->SetBranchAddress("jet_chargedEmEnergyFraction", &jet_chargedEmEnergyFraction, &b_jet_chargedEmEnergyFraction);
   fChain->SetBranchAddress("jet_Unc", &jet_Unc, &b_jet_Unc);
   fChain->SetBranchAddress("jet_pileupJetId", &jet_pileupJetId, &b_jet_pileupJetId);
   fChain->SetBranchAddress("jet_looseJetID", &jet_looseJetID, &b_jet_looseJetID);
   fChain->SetBranchAddress("jet_tightJetID", &jet_tightJetID, &b_jet_tightJetID);
   fChain->SetBranchAddress("jet_hasGenJet", &jet_hasGenJet, &b_jet_hasGenJet);
   fChain->SetBranchAddress("jet_genJet_pt", &jet_genJet_pt, &b_jet_genJet_pt);
   fChain->SetBranchAddress("jet_genJet_eta", &jet_genJet_eta, &b_jet_genJet_eta);
   fChain->SetBranchAddress("jet_genJet_phi", &jet_genJet_phi, &b_jet_genJet_phi);
   fChain->SetBranchAddress("jet_genJet_m", &jet_genJet_m, &b_jet_genJet_m);
   fChain->SetBranchAddress("jet_genJet_E", &jet_genJet_E, &b_jet_genJet_E);
   fChain->SetBranchAddress("jet_genJet_status", &jet_genJet_status, &b_jet_genJet_status);
   fChain->SetBranchAddress("jet_genJet_id", &jet_genJet_id, &b_jet_genJet_id);
   fChain->SetBranchAddress("jet_hasGenParton", &jet_hasGenParton, &b_jet_hasGenParton);
   fChain->SetBranchAddress("jet_genParton_pt", &jet_genParton_pt, &b_jet_genParton_pt);
   fChain->SetBranchAddress("jet_genParton_eta", &jet_genParton_eta, &b_jet_genParton_eta);
   fChain->SetBranchAddress("jet_genParton_phi", &jet_genParton_phi, &b_jet_genParton_phi);
   fChain->SetBranchAddress("jet_genParton_m", &jet_genParton_m, &b_jet_genParton_m);
   fChain->SetBranchAddress("jet_genParton_E", &jet_genParton_E, &b_jet_genParton_E);
   fChain->SetBranchAddress("jet_genParton_status", &jet_genParton_status, &b_jet_genParton_status);
   fChain->SetBranchAddress("jet_genParton_id", &jet_genParton_id, &b_jet_genParton_id);
   fChain->SetBranchAddress("genJet_n", &genJet_n, &b_genJet_n);
   fChain->SetBranchAddress("genJet_pt", &genJet_pt, &b_genJet_pt);
   fChain->SetBranchAddress("genJet_eta", &genJet_eta, &b_genJet_eta);
   fChain->SetBranchAddress("genJet_phi", &genJet_phi, &b_genJet_phi);
   fChain->SetBranchAddress("genJet_m", &genJet_m, &b_genJet_m);
   fChain->SetBranchAddress("genJet_E", &genJet_E, &b_genJet_E);
   fChain->SetBranchAddress("genJet_emEnergy", &genJet_emEnergy, &b_genJet_emEnergy);
   fChain->SetBranchAddress("genJet_hadEnergy", &genJet_hadEnergy, &b_genJet_hadEnergy);
   fChain->SetBranchAddress("genJet_invisibleEnergy", &genJet_invisibleEnergy, &b_genJet_invisibleEnergy);
   fChain->SetBranchAddress("genJet_auxiliaryEnergy", &genJet_auxiliaryEnergy, &b_genJet_auxiliaryEnergy);
   fChain->SetBranchAddress("genJet_flavour", &genJet_flavour, &b_genJet_flavour);

   if( fChain->GetBranch("gen_n") ) fChain->SetBranchAddress("gen_n", &gen_n, &b_gen_n);
   if( fChain->GetBranch("gen_pt") ) fChain->SetBranchAddress("gen_pt", &gen_pt, &b_gen_pt);
   if( fChain->GetBranch("gen_eta") ) fChain->SetBranchAddress("gen_eta", &gen_eta, &b_gen_eta);
   if( fChain->GetBranch("gen_phi") ) fChain->SetBranchAddress("gen_phi", &gen_phi, &b_gen_phi);
   if( fChain->GetBranch("gen_m") ) fChain->SetBranchAddress("gen_m", &gen_m, &b_gen_m);
   if( fChain->GetBranch("gen_E") ) fChain->SetBranchAddress("gen_E", &gen_E, &b_gen_E);
   if( fChain->GetBranch("gen_id") ) fChain->SetBranchAddress("gen_id", &gen_id, &b_gen_id);
   if( fChain->GetBranch("gen_charge") ) fChain->SetBranchAddress("gen_charge", &gen_charge, &b_gen_charge);
   if( fChain->GetBranch("gen_status") ) fChain->SetBranchAddress("gen_status", &gen_status, &b_gen_status);
   if( fChain->GetBranch("gen_index") ) fChain->SetBranchAddress("gen_index", &gen_index, &b_gen_index);
   if( fChain->GetBranch("gen_mother_index") ) fChain->SetBranchAddress("gen_mother_index", &gen_mother_index, &b_gen_mother_index);
   if( fChain->GetBranch("gen_daughter_n") ) fChain->SetBranchAddress("gen_daughter_n", &gen_daughter_n, &b_gen_daughter_n);
   if( fChain->GetBranch("gen_daughter_index") ) fChain->SetBranchAddress("gen_daughter_index", &gen_daughter_index, &b_gen_daughter_index);
   
   if( fChain->GetBranch("genTTX_id") ) fChain->SetBranchAddress("genTTX_id", &genTTX_id, &b_genTTX_id);
}
